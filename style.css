/**
 * CSS variables have 77% global browser support
 * update: now up to 87%! 
 * But they don't work in IE,
 * so we can use Sass for a fallback
 * @link https://caniuse.com/#search=css%20variables
 * 
 * Another consideration is that 90%+ of mobile devices support CSS variables, so you could flip the media query to mobile and make it variable-only and use IE fallback code only for desktop.
 */
/** 
 * Set fallback base font and scale ratio with Sass 
 * Use these numbers with :root when removing fallback
 */
/* Create Sass type sizes */
/* Sass second scale with larger type sizes */
/** 
 * Use Sass variables with CSS variables for single variable source
 * Replace these with above numbers in the future 
 * It appears Sass variables need to be interpolated to strings to work with CSS variables
 */
:root {
  --font-size: 100%;
  --ratio: 1.25;
  --ratio-large: 1.35;
  /** 
   * Set heading sizes with CSS variables
   * any browser that can support variables will support Calc
   * CSS Calc has 94% support
   * @link https://caniuse.com/#feat=calc
   */
  --h4: calc(var(--font-size) * var(--ratio));
  --h3: calc(var(--h4) * var(--ratio));
  --h2: calc(var(--h3) * var(--ratio));
  --h1: calc(var(--h2) * var(--ratio));
  --h5: calc(var(--h4) / var(--ratio));
  --h6: calc(var(--h5) / var(--ratio));
  --text--m: calc(var(--font-size));
  --text--l: calc(var(--text--m) * var(--ratio));
  --text--xl: calc(var(--text--l) * var(--ratio));
  --text--2xl: calc(var(--text--xl) * var(--ratio));
  --text--3xl: calc(var(--text--2xl) * var(--ratio));
  --text--s: calc(var(--font-size) / var(--ratio));
  --text--xs: calc(var(--text--s) / var(--ratio));
  --text--2xs: calc(var(--text--xs) / var(--ratio));
}

h1 {
  font-size: 244.140625%; /* variable fallback for IE11 */
  font-size: var(--h1);
}

h2 {
  font-size: 195.3125%; /* variable fallback for IE11 */
  font-size: var(--h2);
}

h3 {
  font-size: 156.25%; /* variable fallback for IE11 */
  font-size: var(--h3);
}

h4 {
  font-size: 125%; /* variable fallback for IE11 */
  font-size: var(--h4);
}

h5 {
  font-size: 100%; /* variable fallback for IE11 */
  font-size: var(--h5);
}

h6 {
  font-size: 80%; /* variable fallback for IE11 */
  font-size: var(--h6);
}

.text--m {
  font-size: 100%; /* variable fallback for IE11 */
  font-size: var(--text--m);
}

.text--l {
  font-size: 125%; /* variable fallback for IE11 */
  font-size: var(--text--l);
}

.text--xl {
  font-size: 156.25%; /* variable fallback for IE11 */
  font-size: var(--text--xl);
}

.text--2xl {
  font-size: 195.3125%; /* variable fallback for IE11 */
  font-size: var(--text--2xl);
}

.text--3xl {
  font-size: 244.140625%; /* variable fallback for IE11 */
  font-size: var(--text--3xl);
}

.text--s {
  font-size: 80%; /* variable fallback for IE11 */
  font-size: var(--text--s);
}

.text--xs {
  font-size: 64%; /* variable fallback for IE11 */
  font-size: var(--text--xs);
}

.text--2xs {
  font-size: 51.2%; /* variable fallback for IE11 */
  font-size: var(--text--2xs);
}

/* switch to larger ratio */
@media screen and (min-width: 800px) {
  :root {
    --ratio: var(--ratio-large);
  }
  /** 
  * 1. Variable fallback for IE11. When no longer supporting IE11, these can be removed and the ratio can be changed with the single variable change above.
  * This method generates more code than Sass alone but preps the stylesheet for less code with vanilla CSS in the long run
  */
  h1 {
    font-size: 332.150625%;
  }
  h2 {
    font-size: 246.0375%;
  }
  h3 {
    font-size: 182.25%;
  }
  h4 {
    font-size: 135%;
  }
  h5 {
    font-size: 92.5925925926%;
  }
  h6 {
    font-size: 74.0740740741%;
  }
  .text--l {
    font-size: 135%;
  }
  .text--xl {
    font-size: 182.25%;
  }
  .text--2xl {
    font-size: 246.0375%;
  }
  .text--3xl {
    font-size: 332.150625%;
  }
}/*# sourceMappingURL=style.css.map */